version: '3'
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  devcontainer:
    # If you want add a non-root user to your Dockerfile, you can use the "remoteUser"
    # property in devcontainer.json to cause VS Code its sub-processes (terminals, tasks, 
    # debugging) to execute as the user. Uncomment the next line if you want the entire 
    # container to run as this user instead. Note that, on Linux, you may need to 
    # ensure the UID and GID of the container user you create matches your local user. 
    # See https://aka.ms/vscode-remote/containers/non-root for details.
    #
    # user: vscode

    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer 
    # folder. Note that the path of the Dockerfile and context is relative to the *primary* 
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    # uncomment the build section when you want to rebuild
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # - IMAGE_TAG=${IMAGE_TAG}
        - IMAGE_TAG=develop--23.05
    # image: ghcr.io/lucernae/devcontainer-nix:nixos-dockertools---fix-tests--nixos-23.05
    privileged: true
    tty: true
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ../../:/workspace:cached
      - ./etc/nixos/configuration.nix:/etc/nixos/configuration.nix
      # - ./etc/nixos/devcontainer-patch.nix:/etc/nixos/devcontainer-patch.nix

      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      - /var/run/docker.sock:/var/run/docker.sock

      # Systemd related mount
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    
    tmpfs:
      - /cont/tmp:exec,mode=777
      - /run
      - /run/wrappers

    hostname: devcontainer

    environment:
      container: "docker"
      PATH: "/bin:/usr/bin:/usr/sbin:/run/current-system/sw/bin/"
      TMPDIR: "/cont/tmp"
      # NIX_LD_LIBRARY_PATH: "/run/current-system/sw/share/nix-ld/lib"
      # NIX_LD: "/nix/store/2zhqnzjmizb20i1x5zgvzplqd030h69i-ld.so"
      
    cap_add:
        - SYS_ADMIN
        - CAP_NET_ADMIN

    stop_signal: SIGRTMIN+3
    # systemd uses init binary as PID 1, so we should not override the entrypoint or cmd
